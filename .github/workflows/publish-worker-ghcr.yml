name: Publish Worker to GHCR

on:
  push:
    branches: ['master']
    paths:
      - 'activities-examples/**'
      - '.github/workflows/publish-worker-ghcr.yml'
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag'
        required: false
        default: 'latest'

permissions:
  contents: read
  packages: write
  id-token: write
  attestations: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/temporal-worker

jobs:
  publish:
    name: Build and Publish Worker Image
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,enable=true,priority=100,format=short
            type=raw,value=${{ github.event.inputs.image_tag || 'latest' }},enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=Temporal Worker
            org.opencontainers.image.description=Temporal worker for activities examples
            org.opencontainers.image.vendor=Sola Solutions
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.licenses=MIT

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./activities-examples
          file: ./activities-examples/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=temporal-worker
          cache-to: type=gha,mode=max,scope=temporal-worker

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

      - name: Make package public
        run: |
          gh api \
            --method PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /orgs/Sola-Solutions/packages/container/backend-interview%2Ftemporal-worker \
            -f visibility='public'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
